version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - '3000:3000'
    volumes:
      - ./backend/src:/app/src  # Chỉ mount src, tránh lỗi mất node_modules
      - ./backend/.env.development.local:/app/.env.development.local
    env_file:
      - ./backend/.env.development.local
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["yarn", "start:dev"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - '3001:3001'
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/.next:/app/.next  # Giữ cache giúp Next.js build nhanh hơn
    depends_on:
      - backend

  mongodb:
    image: mongo
    container_name: mongo_db
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo_db:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4.2
    container_name: redis_cache
    restart: always
    ports:
      - "127.0.0.1:6379:6379"  # Chỉ mở Redis cho localhost để tránh tấn công
    volumes:
      - redis_data:/data
      - ./backend/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    environment:
      - REDIS_PASSWORD=strongpassword
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "strongpassword", "ping"]
      interval: 10s
      retries: 3
      start_period: 5s

  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: redis_insight
    restart: always
    ports:
      - "8001:8001"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - redis_insight_data:/db
    command: >
      bash -c "sysctl -w net.core.somaxconn=1024 && /entrypoint.sh"

volumes:
  mongo_data:
  redis_data:
  redis_insight_data:
